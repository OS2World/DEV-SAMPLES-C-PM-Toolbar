Name: 		Toolbar
Descripcion: 	Frame Subclass Demo
Date: 		2023-07-01
Version:	1.01
------------------------------------   

DESCRIPTION
-----------
                                                                     
This sample program implements two menu bars: a standard action bar
and a "toolbar". The toolbar consists of "buttons" that can be  
pressed. The toolbar is actually a regular class menu whose items    
have the style MIS_BITMAP. The toolbar is positioned in between      
the standard titlebar and the standard action or menu bar.           
                                                                     
The purpose of this sample is to demonstrate subclassing the frame   
window to add frame controls.                                        
                                                                     
This code was written quickly for demonstration of a technique, not  
as an example of production level coding. Error checking was left    
out in many areas to make the code less "cluttered". The code was    
also written for readability, not for optimal use of resources.      
In other words, please don't judge it too harshly :-)                
                                                                     
DISCLAIMER OF WARRANTIES.  The following [enclosed] code is          
sample code created by IBM Corporation. This sample code is not      
part of any standard or IBM product and is provided to you solely    
for  the purpose of assisting you in the development of your         
applications.  The code is provided "AS IS", without                 
warranty of any kind.  IBM shall not be liable for any damages       
arising out of your use of the sample code, even if they have been   
advised of the possibility of   such damages.                                                                                               

REQUIREMENTS
------------
- yum install git gcc make libc-devel binutils watcom-wrc watcom-wlink-hll

COMPILE INSTRUCTIONS
--------------------
This version of this sample was modified to compile on ArcaOS with GCC 9 compiler. 

1) Remember to have correct header files your path. For GCC the correct ones are the included on the "libc-devel", not the ones from the OS/2 Toolkit. Check your config.sys for "SET INCLUDE=C:\usr\include"

2) Since I'm using the Watcom Resource Compiler (open source) instead of the classic rc.exe, and the the Watcom Linker, intead of the classic ilink.exe, add to your config.sys...
 SET EMXOMFLD_LINKER=wl.exe
 SET EMXOMFLD_TYPE=WLINK
 SET EMXOMFLD_RC_TYPE=WRC
 SET EMXOMFLD_RC=wrc.exe

3) Run "make" or "make 2>&1 |tee make.out" to get the log file.


TOOLS USED
----------
- ArcaOS	- Verion 5.0.7
- wrc 		- Version 2.0beta1
- gcc		- gcc (GCC) 9.2.0 20190812 (OS/2 RPM build 9.2.0-5.oc00)
- make 		- Version 3.81 k2 (2017-11-10)

TROUBLESHOOT
------------
The compile produce will run by just executing make on the directory, but a compile.cmd file is includes to store the log in a file. If you want to save the log file you can run it as "nmake 2>&1 |tee make.out". The log will be saved into the "make.out" file.

HISTORY
---------- 
- 1.01 - 2023-07-01
Changed version to compile on gcc and to run on ArcaOS 5.0.7.

- 1.0
Original version

LICENSE
-------
The 3-Clause BSD License.

AUTHORS
-------
- Martin Iturbide (2023)
- IBM / John D. Webb